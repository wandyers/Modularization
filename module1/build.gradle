if (rootProject.ext.android.isModule) {
    apply plugin: 'com.android.application'
    apply plugin: 'blockcanaryex'
    apply plugin: 'android-aspectjx'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        resourcePrefix "module1_"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
            if (rootProject.ext.android.isModule) {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //release模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
        debug {
            java.srcDirs = ['src/debug/java']
        }
    }
}

aspectjx {
    excludeJarFilter '.jar'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':library')
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
    if (rootProject.ext.android.isModule) {
        debugCompile rootProject.ext.dependencies["blockCanaryExDebug"]
        releaseCompile rootProject.ext.dependencies["blockCanaryExRelease"]
        testCompile rootProject.ext.dependencies["blockCanaryExTest"]
    }
}
